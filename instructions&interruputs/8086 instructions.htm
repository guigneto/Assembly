<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
   <HEAD>
      <TITLE>8086 instructions</TITLE>
   </HEAD>
   <A name=top1>&nbsp; </A><BODY text=#000000 vLink=#0000ff aLink=#ff0000 link=#0000ff bgColor=#ffffff 
      leftMargin=95 rightMargin=95>
      <FONT face=Verdana size=3>
         <FONT size=+2><B>Complete 8086 instruction set</B> </FONT><!-- 116 instructions -->
         <HR>
         <BR>
         Quick reference:<BR><BR>
         <FONT face=Verdana>
            <TABLE width="100%" border=0>
               <TBODY>
                  <TR>
                     <TD>
                        <A href="#AAA">AAA</A><BR>
                        <A href="#AAD">AAD</A><BR>
                        <A href="#AAM">AAM</A><BR>
                        <A href="#AAS">AAS</A><BR>
                        <A href="#ADC">ADC</A><BR>
                        <A href="#ADD">ADD</A><BR>
                        <A href="#AND">AND</A><BR>
                        <A href="#CALL">CALL</A><BR>
                        <A href="#CBW">CBW</A><BR>
                        <A href="#CLC">CLC</A><BR>
                        <A href="#CLD">CLD</A><BR>
                        <A href="#CLI">CLI</A><BR>
                        <A href="#CMC">CMC</A><BR>
                        <A href="#CMP">CMP</A><BR>
                     </TD>
                     <TD>
                        <A href="#CMPSB">CMPSB</A><BR>
                        <A href="#CMPSW">CMPSW</A> <BR>
                        <A href="#CWD">CWD</A><BR>
                        <A href="#DAA">DAA</A><BR>
                        <A href="#DAS">DAS</A><BR>
                        <A href="#DEC">DEC</A><BR>
                        <A href="#DIV">DIV</A><BR>
                        <A href="#HLT">HLT</A><BR>
                        <A href="#IDIV">IDIV</A><BR>
                        <A href="#IMUL">IMUL</A><BR>
                        <A href="#IN">IN</A><BR>
                        <A href="#INC">INC</A><BR>
                        <A href="#INT">INT</A> <BR>
                        <A href="#INTO">INTO</A><BR>
                        <A href="#IRET">IRET</A><BR>
                        <A href="#JA">JA</A><BR>
                     </TD>
                     <TD>
                        <A href="#JAE">JAE</A><BR>
                        <A href="#JB">JB</A><BR>
                        <A href="#JBE">JBE</A><BR>
                        <A href="#JC">JC</A><BR>
                        <A href="#JCXZ">JCXZ</A><BR>
                        <A href="#JE">JE</A><BR>
                        <A href="#JG">JG</A><BR>
                        <A href="#JGE">JGE</A><BR>
                        <A href="#JL">JL</A><BR>
                        <A href="#JLE">JLE</A><BR>
                        <A href="#JMP">JMP</A><BR>
                        <A href="#JNA">JNA</A><BR>
                        <A href="#JNAE">JNAE</A><BR>
                        <A href="#JNB">JNB</A><BR>
                     </TD>
                     <TD>
                        <A href="JNBE">JNBE</A><BR>
                        <A href="#JNC">JNC</A><BR>
                        <A href="#JNE">JNE</A><BR>
                        <A href="#JNG">JNG</A><BR>
                        <A href="#JNGE">JNGE</A><BR>
                        <A href="#JNL">JNL</A><BR>
                        <A href="#JNLE">JNLE</A><BR>
                        <A href="#JNO">JNO</A><BR>
                        <A href="#JNP">JNP</A><BR>
                        <A href="#JNS">JNS</A><BR>
                        <A href="#JNZ">JNZ</A><BR>
                        <A href="#JO">JO</A><BR>
                        <A href="#JP">JP</A><BR>
                        <A href="#JPE">JPE</A><BR>
                     </TD>
                     <TD>
                        <A href="#JPO">JPO</A><BR>
                        <A href="#JS">JS</A><BR>
                        <A href="#JZ">JZ</A><BR>
                        <A href="#LAHF">LAHF</A><BR>
                        <A href="#LDS">LDS</A><BR>
                        <A href="#LEA">LEA</A><BR>
                        <A href="#LES">LES</A><BR>
                        <A href="#LODSB">LODSB</A><BR>
                        <A href="#LODSW">LODSW</A><BR>
                        <A href="#LOOP">LOOP</A><BR>
                        <A href="#LOOPE">LOOPE</A><BR>
                        <A href="#LOOPNE">LOOPNE</A><BR>
                        <A href="#LOOPNZ">LOOPNZ</A><BR>
                        <A href="#LOOPZ">LOOPZ</A><BR>
                     </TD>
                     <TD><A href="#MOV">MOV</A><BR>
                        <A href="#MOVSB">MOVSB</A>
                        <BR><A href="#MOVSW">MOVSW</A><BR>
                        <A href="#MUL">MUL</A><BR>
                        <A href="#NEG">NEG</A><BR>
                        <A href="#NOP">NOP</A><BR>
                        <A href="#NOT">NOT</A><BR>
                        <A href="#OR">OR</A><BR>
                        <A href="#OUT">OUT</A><BR>
                        <A href="#POP">POP</A><BR>
                        <A href="#POPA">POPA</A><BR>
                        <A href="#POPF">POPF</A><BR>
                        <A href="#PUSH">PUSH</A> <BR>
                        <A href="#PUSHA">PUSHA</A> <BR>
                        <A href="#PUSHF">PUSHF</A> <BR>
                        <A href="#RCL">RCL</A> <BR>
                     </TD>
                     <TD>
                        <A href="#RCR">RCR</A><BR>
                        <A href="#REP">REP</A><BR>
                        <A href="#REPE">REPE</A><BR>
                        <A href="#REPNE">REPNE</A><BR>
                        <A href="#REPNZ">REPNZ</A> 
                        <BR><A href="#REPZ">REPZ</A> 
                        <BR><A 
                           href="#RET">RET</A> 
                        <BR><A 
                           href="#RETF">RETF</A> 
                        <BR><A 
                           href="#ROL">ROL</A> 
                        <BR><A 
                           href="#ROR">ROR</A> 
                        <BR><A 
                           href="#SAHF">SAHF</A> 
                        <BR><A 
                           href="#SAL">SAL</A> 
                        <BR><A 
                           href="#SAR">SAR</A> 
                        <BR><A 
                           href="#SBB">SBB</A> 
                        <BR>
                     </TD>
                     <TD><A 
                        href="#SCASB">SCASB</A> 
                        <BR><A 
                           href="#SCASW">SCASW</A> 
                        <BR><A 
                           href="#SHL">SHL</A> 
                        <BR><A 
                           href="#SHR">SHR</A> 
                        <BR><A 
                           href="#STC">STC</A> 
                        <BR><A 
                           href="#STD">STD</A> 
                        <BR><A 
                           href="#STI">STI</A> 
                        <BR><A 
                           href="#STOSB">STOSB</A> 
                        <BR><A 
                           href="#STOSW">STOSW</A> 
                        <BR><A 
                           href="#SUB">SUB</A> 
                        <BR><A 
                           href="#TEST">TEST</A> 
                        <BR><A 
                           href="#XCHG">XCHG</A> 
                        <BR><A 
                           href="#XLATB">XLATB</A> 
                        <BR><A 
                           href="#XOR">XOR</A> 
                        <BR>
                     </TD>
                  </TR>
               </TBODY>
            </TABLE>
         </FONT>
         <BR><BR>
         <HR>
         Operand types:<BR><BR><B>REG</B>: AX, BX, CX, DX, AH, AL, BL, BH, CH, CL, DH, 
         DL, DI, SI, BP, SP.<BR><BR><B>SREG</B>: DS, ES, SS, and only as second operand: 
         CS.<BR><BR><B>memory</B>: [BX], [BX+SI+7], variable, etc...(see 
		 <B>Memory Access</B>).<BR><BR><B>immediate</B>: 5, -24, 3Fh, 10001101b, etc...<BR><BR>
         <HR>
         <BR>Notes:<BR><BR>
         <UL>
            <LI>When two operands are required for an instruction they are separated by 
               comma. For example:<BR><BR><FONT face=Fixedsys>REG, memory </FONT><BR><BR>
            <LI>When there are two operands, both operands must have the same size (except 
               shift and rotate instructions). For example:<BR><BR><FONT face=Fixedsys>AL, 
               DL<BR>DX, AX<BR><FONT color=#005555>m1 DB ?<BR></FONT>AL, m1<BR><FONT 
                  color=#005555>m2 DW ?<BR></FONT>AX, m2 </FONT><BR><BR>
            <LI>Some instructions allow several operand combinations. For 
               example:<BR><BR><FONT face=Fixedsys>memory, immediate<BR>REG, 
               immediate<BR><BR>memory, REG<BR>REG, SREG </FONT><BR><BR>
            <LI>
               Some examples contain macros, so it is advisable to use 
               <NOBR><B>Shift + 
                  F8</B>
               </NOBR>
               hot key to <I>Step Over</I> (to make macro code execute at 
               maximum speed set <B>step delay</B> to zero), otherwise emulator will step 
               through each instruction of a macro. Here is an example that uses PRINTN 
               macro: 
               <PRE> <FONT face=Fixedsys>

   include 'emu8086.inc'
   ORG 100h
   MOV AL, 1
   MOV BL, 2
   PRINTN 'Hello World!'   ; macro.
   MOV CL, 3
   PRINTN 'Welcome!'       ; macro.
   RET</FONT></PRE>
            </LI>
         </UL>
         <BR>
         <HR>
         <BR><BR>These marks are used to show the state of the flags:<BR><BR><B>1</B> - 
         instruction sets this flag to <B>1</B>.<BR><B>0</B> - instruction sets this flag 
         to <B>0</B>.<BR><B>r</B> - flag value depends on result of the 
         instruction.<BR><B>?</B> - flag value is undefined (maybe <B>1</B> or 
         <B>0</B>).<BR><BR><BR>
         <HR>
         <BR><BR><B>Some instructions generate exactly the same machine code, so 
         disassembler may have a problem decoding to your original code. This is 
         especially important for Conditional Jump instructions (see Program 
         Flow Control in Tutorials for more information).</B> <BR><BR><BR>
         <HR>
         <BR><BR>Instructions in alphabetical order: <BR><BR>
         <TABLE cellPadding=10 width="100%" border=1>
            <TBODY>
               <TR>
                  <TD>Instruction</TD>
                  <TD>Operands</TD>
                  <TD>Description <A name=AAA>&nbsp;</A> </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>AAA </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     ASCII Adjust after Addition.<BR>Corrects result in AH and AL after 
                     addition when working with BCD values. <BR><BR>It works according to the 
                     following Algorithm: <BR><BR>
                     <FONT face=Fixedsys>
                        if low nibble of AL &gt; 
                        9 or AF = 1 then:<BR>
                        <UL>
                           <LI>AL = AL + 6 
                           <LI>AH = AH + 1 
                           <LI>AF = 1 
                           <LI>CF = 1 </LI>
                        </UL>
                        else 
                        <UL>
                           <LI>AF = 0 
                           <LI>CF = 0 </LI>
                        </UL>
                        in both cases:<BR>clear the high nibble of AL. 
                     </FONT>
                     <BR><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AX, 15   ; AH = 00, AL = 0Fh
AAA          ; AH = 01, AL = 05
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=AAD>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>AAD </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     ASCII Adjust before Division.<BR>Prepares two BCD values for division. 
                     <BR><BR>Algorithm: <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>AL = (AH * 10) + AL 
                           <LI>AH = 0 </LI>
                        </UL>
                     </FONT>
                     <BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AX, 0105h   ; AH = 01, AL = 05
AAD             ; AH = 00, AL = 0Fh (15)
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>?</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>?</TD>
                                 <TD>r</TD>
                                 <TD>?</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=AAM>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>AAM </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     ASCII Adjust after Multiplication.<BR>Corrects the result of 
                     multiplication of two BCD values. <BR><BR>Algorithm: <BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>
                           <LI>AH = AL / 10 
                           <LI>AL = remainder </LI>
                        </UL>
                     </FONT>
                     <BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 15   ; AL = 0Fh
AAM          ; AH = 01, AL = 05
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>?</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>?</TD>
                                 <TD>r</TD>
                                 <TD>?</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=AAS>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>AAS </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     ASCII Adjust after Subtraction.<BR>Corrects result in AH and AL after 
                     subtraction when working with BCD values. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        if low nibble of AL &gt; 9 or AF = 1 then:<BR>
                        <UL>
                           <LI>AL = AL - 6 
                           <LI>AH = AH - 1 
                           <LI>AF = 1 
                           <LI>CF = 1 </LI>
                        </UL>
                        else 
                        <UL>
                           <LI>AF = 0 
                           <LI>CF = 0 </LI>
                        </UL>
                        in both cases:<BR>clear the high nibble of AL. 
                     </FONT>
                     <BR><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AX, 02FFh  ; AH = 02, AL = 0FFh
AAS            ; AH = 01, AL = 09
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=ADC>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>ADC </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory<BR>memory, REG<BR>REG, 
                           REG<BR>memory, immediate<BR>REG, immediate 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Add with Carry.<BR><BR><BR>Algorithm:<BR><BR><FONT 
                        face=Fixedsys>operand1 = operand1 + operand2 + CF </FONT><BR><BR>Example:
                     <PRE><FONT face=Fixedsys>STC        ; set CF = 1
MOV AL, 5  ; AL = 5
ADC AL, 1  ; AL = 7
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=ADD>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>ADD </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory<BR>memory, REG<BR>REG, 
                           REG<BR>memory, immediate<BR>REG, immediate 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Add.<BR><BR><BR>Algorithm:<BR><BR><FONT face=Fixedsys>operand1 = 
                     operand1 + operand2 </FONT><BR><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 5   ; AL = 5
ADD AL, -3  ; AL = 2
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=AND>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>AND </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory<BR>memory, REG<BR>REG, 
                           REG<BR>memory, immediate<BR>REG, immediate 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Logical AND between all bits of two operands. Result is stored in 
                     operand1.<BR><BR>These rules apply:<BR><BR><FONT face=Fixedsys>1 AND 1 = 
                     1<BR>1 AND 0 = 0<BR>0 AND 1 = 0<BR>0 AND 0 = 0<BR></FONT><BR><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 'a'        ; AL = 01100001b
AND AL, 11011111b  ; AL = 01000001b  ('A')
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                              </TR>
                              <TR>
                                 <TD>0</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>0</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=CALL>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>CALL </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>procedure name<BR>label<BR>4-byte 
                           address<BR>
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Transfers control to procedure, return address is (IP) is pushed to 
                     stack. <I>4-byte address</I> may be entered in this form: <FONT 
                        face=Fixedsys>1234h:5678h</FONT>, first value is a segment second value is 
                     an offset (this is a far call, so CS is also pushed to 
                     stack).<BR><BR><BR>Example:
                     <PRE><FONT face=Fixedsys>
ORG 100h  ; directive to make simple .com file.

CALL p1

ADD AX, 1

RET         ; return to OS.

p1 PROC     ; procedure declaration.
    MOV AX, 1234h
    RET     ; return to caller.
p1 ENDP</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=CBW>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>CBW </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Convert byte into word. <BR><BR>Algorithm: <BR><BR>
                     <FONT 
                        face=Fixedsys>
                        if high bit of AL = 1 then: 
                        <UL>
                           <LI>AH = 255 (0FFh) </LI>
                        </UL>
                        <BR>else 
                        <UL>
                           <LI>AH = 0 </LI>
                        </UL>
                     </FONT>
                     <BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AX, 0   ; AH = 0, AL = 0
MOV AL, -5  ; AX = 000FBh (251)
CBW         ; AX = 0FFFBh (-5)
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=CLC>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>CLC </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Clear Carry flag. <BR><BR>Algorithm: <BR><BR><FONT face=Fixedsys>CF = 
                     0 </FONT><BR><BR>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                              </TR>
                              <TR>
                                 <TD>0</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=CLD>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>CLD </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Clear Direction flag. SI and DI will be incremented by chain 
                     instructions: CMPSB, CMPSW, LODSB, LODSW, MOVSB, MOVSW, STOSB, STOSW. 
                     <BR><BR>Algorithm: <BR><BR><FONT face=Fixedsys>DF = 0 </FONT><BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>D</TD>
                              </TR>
                              <TR>
                                 <TD>0</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=CLI>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>CLI </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Clear Interrupt enable flag. This disables hardware interrupts. 
                     <BR><BR>Algorithm: <BR><BR><FONT face=Fixedsys>IF = 0 </FONT><BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>I</TD>
                              </TR>
                              <TR>
                                 <TD>0</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=CMC>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>CMC </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Complement Carry flag. Inverts value of CF. <BR><BR>Algorithm: 
                     <BR><BR><FONT face=Fixedsys>if CF = 1 then CF = 0<BR>if CF = 0 then CF = 
                     1<BR></FONT><BR><BR>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=CMP>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>CMP </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory<BR>memory, REG<BR>REG, 
                           REG<BR>memory, immediate<BR>REG, immediate 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Compare. <BR><BR>Algorithm:<BR><BR><FONT face=Fixedsys>operand1 - 
                     operand2 <BR><BR>result is not stored anywhere, flags are set (OF, SF, ZF, 
                     AF, PF, CF) according to result. </FONT><BR><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 5
MOV BL, 5
CMP AL, BL  ; AL = 5, ZF = 1 (so equal!)
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=CMPSB>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>CMPSB </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Compare bytes: 
                     <NOBR>ES:[DI] from DS:[SI].</NOBR>
                     <BR><BR>Algorithm: 
                     <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>DS:[SI] - ES:[DI]<BR>
                           <LI>set flags according to result:<BR>OF, SF, ZF, AF, PF, CF<BR>
                           <LI>
                              if DF = 0 then 
                              <UL>
                                 <LI>SI = SI + 1 
                                 <LI>DI = DI + 1 </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>SI = SI - 1 
                                 <LI>DI = DI - 1 </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     Example:<BR>see <B><A 
                        href="http://www.emu8086.com/dr/asm2html/assembler_source_code/cmpsb.asm.html" 
                        target=_blank>cmpsb.asm</A></B> in c:\emu8086\examples\. <BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=CMPSW>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>CMPSW </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Compare words: 
                     <NOBR>ES:[DI] from DS:[SI].</NOBR>
                     <BR><BR>Algorithm: 
                     <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>DS:[SI] - ES:[DI]<BR>
                           <LI>set flags according to result:<BR>OF, SF, ZF, AF, PF, CF<BR>
                           <LI>
                              if DF = 0 then 
                              <UL>
                                 <LI>SI = SI + 2 
                                 <LI>DI = DI + 2 </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>SI = SI - 2 
                                 <LI>DI = DI - 2 </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     Example:<BR>see <B><A 
                        href="http://www.emu8086.com/dr/asm2html/assembler_source_code/cmpsw.asm.html" 
                        target=_blank>cmpsw.asm</A></B> in c:\emu8086\examples\. <BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=CWD>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>CWD </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Convert Word to Double word. <BR><BR>Algorithm: <BR><BR>
                     <FONT 
                        face=Fixedsys>
                        if high bit of AX = 1 then: 
                        <UL>
                           <LI>DX = 65535 (0FFFFh) </LI>
                        </UL>
                        <BR>else 
                        <UL>
                           <LI>DX = 0 </LI>
                        </UL>
                     </FONT>
                     <BR>Example:
                     <PRE><FONT face=Fixedsys>MOV DX, 0   ; DX = 0
MOV AX, 0   ; AX = 0
MOV AX, -5  ; DX AX = 00000h:0FFFBh
CWD         ; DX AX = 0FFFFh:0FFFBh
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=DAA>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>DAA </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Decimal adjust After Addition.<BR>Corrects the result of addition of 
                     two packed BCD values. <BR><BR>Algorithm: <BR><BR>
                     <FONT face=Fixedsys>
                        if 
                        low nibble of AL &gt; 9 or AF = 1 then:<BR>
                        <UL>
                           <LI>AL = AL + 6 
                           <LI>AF = 1 </LI>
                        </UL>
                        if AL &gt; 9Fh or CF = 1 then: 
                        <UL>
                           <LI>AL = AL + 60h 
                           <LI>CF = 1 </LI>
                        </UL>
                     </FONT>
                     <BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 0Fh  ; AL = 0Fh (15)
DAA          ; AL = 15h
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=DAS>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>DAS </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Decimal adjust After Subtraction.<BR>Corrects the result of 
                     subtraction of two packed BCD values. <BR><BR>Algorithm: <BR><BR>
                     <FONT 
                        face=Fixedsys>
                        if low nibble of AL &gt; 9 or AF = 1 then:<BR>
                        <UL>
                           <LI>AL = AL - 6 
                           <LI>AF = 1 </LI>
                        </UL>
                        if AL &gt; 9Fh or CF = 1 then: 
                        <UL>
                           <LI>AL = AL - 60h 
                           <LI>CF = 1 </LI>
                        </UL>
                     </FONT>
                     <BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 0FFh  ; AL = 0FFh (-1)
DAS           ; AL = 99h, CF = 1
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=DEC>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>DEC </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG<BR>memory<BR></NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Decrement. <BR><BR>Algorithm:<BR><BR><FONT face=Fixedsys>operand = 
                     operand - 1 <BR><BR></FONT><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 255  ; AL = 0FFh (255 or -1)
DEC AL       ; AL = 0FEh (254 or -2)
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                        CF - unchanged! 
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=DIV>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>DIV </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG<BR>memory<BR></NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Unsigned divide. <BR><BR>Algorithm:<BR><BR>
                     <BLOCKQUOTE>when operand is a <B>byte</B>:<BR><FONT face=Fixedsys>AL = 
                        AX / operand<BR>AH = remainder (modulus) </FONT>
                     </BLOCKQUOTE>
                     <BLOCKQUOTE>when operand is a <B>word</B>:<BR><FONT face=Fixedsys>AX = 
                        (DX AX) / operand<BR>DX = remainder (modulus) </FONT>
                     </BLOCKQUOTE>
                     Example:
                     <PRE><FONT face=Fixedsys>MOV AX, 203   ; AX = 00CBh
MOV BL, 4
DIV BL        ; AL = 50 (32h), AH = 3
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=HLT>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>HLT </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Halt the System.<BR><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AX, 5
HLT</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=IDIV>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>IDIV </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG<BR>memory<BR></NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Signed divide. <BR><BR>Algorithm:<BR><BR>
                     <BLOCKQUOTE>when operand is a <B>byte</B>:<BR><FONT face=Fixedsys>AL = 
                        AX / operand<BR>AH = remainder (modulus) </FONT>
                     </BLOCKQUOTE>
                     <BLOCKQUOTE>when operand is a <B>word</B>:<BR><FONT face=Fixedsys>AX = 
                        (DX AX) / operand<BR>DX = remainder (modulus) </FONT>
                     </BLOCKQUOTE>
                     Example:
                     <PRE><FONT face=Fixedsys>MOV AX, -203 ; AX = 0FF35h
MOV BL, 4
IDIV BL      ; AL = -50 (0CEh), AH = -3 (0FDh)
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=IMUL>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>IMUL </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG<BR>memory<BR></NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Signed multiply. <BR><BR>Algorithm:<BR><BR>
                     <BLOCKQUOTE>when operand is a <B>byte</B>:<BR><FONT face=Fixedsys>AX = 
                        AL * operand</FONT>. 
                     </BLOCKQUOTE>
                     <BLOCKQUOTE>when operand is a <B>word</B>:<BR><FONT face=Fixedsys>(DX 
                        AX) = AX * operand</FONT>. 
                     </BLOCKQUOTE>
                     Example:
                     <PRE><FONT face=Fixedsys>MOV AL, -2
MOV BL, -4
IMUL BL      ; AX = 8
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>r</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                        CF=OF=0 when result fits into operand of 
                        IMUL. 
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=IN>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>IN </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>AL, im.byte<BR>AL, DX<BR>AX, im.byte<BR>AX, 
                           DX 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Input from port into <B>AL</B> or <B>AX</B>.<BR>Second operand is a 
                     port number. If required to access port number over 255 - <B>DX</B> 
                     register should be used. <BR>Example:
                     <PRE><FONT face=Fixedsys>IN AX, 4  ; get status of traffic lights.
IN AL, 7  ; get status of stepper-motor.
</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=INC>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>INC </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG<BR>memory<BR></NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Increment. <BR><BR>Algorithm:<BR><BR><FONT face=Fixedsys>operand = 
                     operand + 1 <BR></FONT><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 4
INC AL       ; AL = 5
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                        CF - unchanged! 
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=INT>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>INT </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>immediate byte</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Interrupt numbered by immediate byte (0..255). 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           Push to stack: 
                           <UL>
                              <LI>flags register 
                              <LI>CS 
                              <LI>IP </LI>
                           </UL>
                           <LI>IF = 0 
                           <LI>Transfer control to interrupt procedure </LI>
                        </UL>
                     </FONT>
                     <BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AH, 0Eh  ; teletype.
MOV AL, 'A'
INT 10h      ; BIOS interrupt.
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                                 <TD>I</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                                 <TD>0</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=INTO>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>INTO </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Interrupt 4 if Overflow flag is 1. <BR><BR>Algorithm:<BR><BR><FONT 
                        face=Fixedsys>if OF = 1 then INT 4 <BR></FONT><BR>Example:
                     <PRE><FONT face=Fixedsys>; -5 - 127 = -132 (not in -128..127)
; the result of SUB is wrong (124),
; so OF = 1 is set:
MOV AL, -5
SUB AL, 127   ; AL = 7Ch (124)
INTO          ; process error.
RET</FONT></PRE>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=IRET>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>IRET </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Interrupt Return. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           Pop from stack: 
                           <UL>
                              <LI>IP 
                              <LI>CS 
                              <LI>flags register </LI>
                           </UL>
                        </UL>
                     </FONT>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>
                                    <CENTER>popped</CENTER>
                                 </TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JA>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JA </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Above second operand (as set by CMP 
                     instruction). Unsigned. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if (CF = 0) and (ZF = 0) then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 250
   CMP AL, 5
   JA label1
   PRINT 'AL is not above 5'
   JMP exit
label1:
   PRINT 'AL is above 5'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JAE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JAE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Above or Equal to second operand (as 
                     set by CMP instruction). Unsigned. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>if CF = 0 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 5
   CMP AL, 5
   JAE label1
   PRINT 'AL is not above or equal to 5'
   JMP exit
label1:
   PRINT 'AL is above or equal to 5'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JB>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JB </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Below second operand (as set by CMP 
                     instruction). Unsigned. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if CF = 1 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 1
   CMP AL, 5
   JB  label1
   PRINT 'AL is not below 5'
   JMP exit
label1:
   PRINT 'AL is below 5'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JBE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JBE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Below or Equal to second operand (as 
                     set by CMP instruction). Unsigned. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>if CF = 1 or ZF = 1 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 5
   CMP AL, 5
   JBE  label1
   PRINT 'AL is not below or equal to 5'
   JMP exit
label1:
   PRINT 'AL is below or equal to 5'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JC>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JC </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if Carry flag is set to 1. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>if CF = 1 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 255
   ADD AL, 1
   JC  label1
   PRINT 'no carry.'
   JMP exit
label1:
   PRINT 'has carry.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JCXZ>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JCXZ </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if CX register is 0. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>if CX = 0 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV CX, 0
   JCXZ label1
   PRINT 'CX is not zero.'
   JMP exit
label1:
   PRINT 'CX is zero.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Equal to second operand (as set by CMP 
                     instruction). Signed/Unsigned. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>if ZF = 1 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 5
   CMP AL, 5
   JE  label1
   PRINT 'AL is not equal to 5.'
   JMP exit
label1:
   PRINT 'AL is equal to 5.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JG>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JG </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Greater then second operand (as set by 
                     CMP instruction). Signed. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if (ZF = 0) and (SF = OF) then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 5
   CMP AL, -5
   JG  label1
   PRINT 'AL is not greater -5.'
   JMP exit
label1:
   PRINT 'AL is greater -5.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JGE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JGE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Greater or Equal to second operand (as 
                     set by CMP instruction). Signed. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>if SF = OF then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 2
   CMP AL, -5
   JGE  label1
   PRINT 'AL &lt; -5'
   JMP exit
label1:
   PRINT 'AL &gt;= -5'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JL>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JL </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Less then second operand (as set by CMP 
                     instruction). Signed. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if SF &lt;&gt; OF then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, -2
   CMP AL, 5
   JL  label1
   PRINT 'AL &gt;= 5.'
   JMP exit
label1:
   PRINT 'AL &lt; 5.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JLE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JLE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Less or Equal to second operand (as set 
                     by CMP instruction). Signed. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>if SF &lt;&gt; OF or ZF = 1 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, -2
   CMP AL, 5
   JLE label1
   PRINT 'AL &gt; 5.'
   JMP exit
label1:
   PRINT 'AL &lt;= 5.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JMP>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JMP </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label<BR>4-byte address<BR></NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Unconditional Jump. Transfers control to another part of the program. 
                     <I>4-byte address</I> may be entered in this form: <FONT 
                        face=Fixedsys>1234h:5678h</FONT>, first value is a segment second value is 
                     an offset.<BR><BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>always jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 5
   JMP label1    ; jump over 2 lines!
   PRINT 'Not Jumped!'
   MOV AL, 0
label1:
   PRINT 'Got Here!'
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNA>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNA </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Not Above second operand (as set by CMP 
                     instruction). Unsigned. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if CF = 1 or ZF = 1 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 2
   CMP AL, 5
   JNA label1
   PRINT 'AL is above 5.'
   JMP exit
label1:
   PRINT 'AL is not above 5.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNAE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNAE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Not Above and Not Equal to second 
                     operand (as set by CMP instruction). Unsigned. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if CF = 1 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 2
   CMP AL, 5
   JNAE label1
   PRINT 'AL &gt;= 5.'
   JMP exit
label1:
   PRINT 'AL &lt; 5.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNB>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNB </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Not Below second operand (as set by CMP 
                     instruction). Unsigned. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if CF = 0 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 7
   CMP AL, 5
   JNB label1
   PRINT 'AL &lt; 5.'
   JMP exit
label1:
   PRINT 'AL &gt;= 5.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNBE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNBE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Not Below and Not Equal to second 
                     operand (as set by CMP instruction). Unsigned. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if (CF = 0) and (ZF = 0) then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 7
   CMP AL, 5
   JNBE label1
   PRINT 'AL &lt;= 5.'
   JMP exit
label1:
   PRINT 'AL &gt; 5.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNC>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNC </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if Carry flag is set to 0. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>if CF = 0 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 2
   ADD AL, 3
   JNC  label1
   PRINT 'has carry.'
   JMP exit
label1:
   PRINT 'no carry.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Not Equal to second operand (as set by 
                     CMP instruction). Signed/Unsigned. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>if ZF = 0 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 2
   CMP AL, 3
   JNE  label1
   PRINT 'AL = 3.'
   JMP exit
label1:
   PRINT 'Al &lt;&gt; 3.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNG>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNG </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Not Greater then second operand (as set 
                     by CMP instruction). Signed. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>if (ZF = 1) and (SF &lt;&gt; OF) then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 2
   CMP AL, 3
   JNG  label1
   PRINT 'AL &gt; 3.'
   JMP exit
label1:
   PRINT 'Al &lt;= 3.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNGE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNGE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Not Greater and Not Equal to second 
                     operand (as set by CMP instruction). Signed. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if SF &lt;&gt; OF then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 2
   CMP AL, 3
   JNGE  label1
   PRINT 'AL &gt;= 3.'
   JMP exit
label1:
   PRINT 'Al &lt; 3.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNL>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNL </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Not Less then second operand (as set by 
                     CMP instruction). Signed. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if SF = OF then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 2
   CMP AL, -3
   JNL label1
   PRINT 'AL &lt; -3.'
   JMP exit
label1:
   PRINT 'Al &gt;= -3.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNLE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNLE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if first operand is Not Less and Not Equal to second 
                     operand (as set by CMP instruction). Signed. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if (SF = OF) and (ZF = 0) then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 2
   CMP AL, -3
   JNLE label1
   PRINT 'AL &lt;= -3.'
   JMP exit
label1:
   PRINT 'Al &gt; -3.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNO>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNO </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if Not Overflow. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>if OF = 0 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>; -5 - 2 = -7 (inside -128..127)
; the result of SUB is correct,
; so OF = 0:

include 'emu8086.inc'

ORG 100h
  MOV AL, -5
  SUB AL, 2   ; AL = 0F9h (-7)
JNO  label1
  PRINT 'overflow!'
JMP exit
label1:
  PRINT 'no overflow.'
exit:
  RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNP>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNP </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if No Parity (odd). Only 8 low bits of result are checked. 
                     Set by CMP, SUB, ADD, TEST, AND, OR, XOR instructions. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if PF = 0 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 00000111b   ; AL = 7
   OR  AL, 0           ; just set flags.
   JNP label1
   PRINT 'parity even.'
   JMP exit
label1:
   PRINT 'parity odd.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNS>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNS </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if Not Signed (if positive). Set by CMP, SUB, ADD, TEST, 
                     AND, OR, XOR instructions. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if SF = 0 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 00000111b   ; AL = 7
   OR  AL, 0           ; just set flags.
   JNS label1
   PRINT 'signed.'
   JMP exit
label1:
   PRINT 'not signed.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JNZ>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JNZ </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if Not Zero (not equal). Set by CMP, SUB, ADD, TEST, AND, 
                     OR, XOR instructions. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if ZF = 0 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 00000111b   ; AL = 7
   OR  AL, 0           ; just set flags.
   JNZ label1
   PRINT 'zero.'
   JMP exit
label1:
   PRINT 'not zero.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JO>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JO </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if Overflow. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if OF = 1 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>; -5 - 127 = -132 (not in -128..127)
; the result of SUB is wrong (124),
; so OF = 1 is set:

include 'emu8086.inc'

org 100h
  MOV AL, -5
  SUB AL, 127   ; AL = 7Ch (124)
JO  label1
  PRINT 'no overflow.'
JMP exit
label1:
  PRINT 'overflow!'
exit:
  RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JP>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JP </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if Parity (even). Only 8 low bits of result are checked. 
                     Set by CMP, SUB, ADD, TEST, AND, OR, XOR instructions. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if PF = 1 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 00000101b   ; AL = 5
   OR  AL, 0           ; just set flags.
   JP label1
   PRINT 'parity odd.'
   JMP exit
label1:
   PRINT 'parity even.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JPE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JPE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if Parity Even. Only 8 low bits of result are checked. Set 
                     by CMP, SUB, ADD, TEST, AND, OR, XOR instructions. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if PF = 1 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 00000101b   ; AL = 5
   OR  AL, 0           ; just set flags.
   JPE label1
   PRINT 'parity odd.'
   JMP exit
label1:
   PRINT 'parity even.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JPO>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JPO </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if Parity Odd. Only 8 low bits of result are checked. Set 
                     by CMP, SUB, ADD, TEST, AND, OR, XOR instructions. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if PF = 0 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 00000111b   ; AL = 7
   OR  AL, 0           ; just set flags.
   JPO label1
   PRINT 'parity even.'
   JMP exit
label1:
   PRINT 'parity odd.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JS>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JS </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if Signed (if negative). Set by CMP, SUB, ADD, TEST, AND, 
                     OR, XOR instructions. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if SF = 1 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 10000000b   ; AL = -128
   OR  AL, 0           ; just set flags.
   JS label1
   PRINT 'not signed.'
   JMP exit
label1:
   PRINT 'signed.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=JZ>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>JZ </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Short Jump if Zero (equal). Set by CMP, SUB, ADD, TEST, AND, OR, XOR 
                     instructions. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>if ZF = 1 then jump </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV AL, 5
   CMP AL, 5
   JZ  label1
   PRINT 'AL is not equal to 5.'
   JMP exit
label1:
   PRINT 'AL is equal to 5.'
exit:
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=LAHF>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>LAHF </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Load AH from 8 low bits of Flags register. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>AH = flags register<BR></UL>
                        <PRE><FONT face=Fixedsys>
AH bit:   7    6   5    4   3    2   1    0
        [SF] [ZF] [0] [AF] [0] [PF] [1] [CF]</FONT>
</PRE>
                        bits 1, 3, 5 are reserved. 
                     </FONT>
                     <BR><BR>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=LDS>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>LDS </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Load memory double word into word register and DS. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>REG = first word 
                           <LI>DS = second word </LI>
                        </UL>
                     </FONT>
                     <BR>Example: 
                     <PRE><FONT face=Fixedsys>

ORG 100h

LDS AX, m

RET

m  DW  1234h
   DW  5678h

END
</FONT>
</PRE>
                     AX is set to 1234h, DS is set to 5678h. <BR><BR>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=LEA>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>LEA </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Load Effective Address. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>REG = address of memory (offset) </LI>
                        </UL>
                     </FONT>
                     <BR>Example: <!-- START AUTOMATIC ASM TO HTML EXPORT -->
                     <PRE><FONT face=Terminal size=3>
<FONT color=#0000ff>MOV</FONT> <FONT color=#c80000>BX</FONT>, 35h
<FONT color=#0000ff>MOV</FONT> <FONT color=#c80000>DI</FONT>, 12h
<FONT color=#0000ff>LEA</FONT> <FONT color=#c80000>SI</FONT>, <FONT color=#0064c8>[</FONT><FONT color=#c80000>BX</FONT><FONT color=#0064c8>+</FONT><FONT color=#c80000>DI</FONT><FONT color=#0064c8>]</FONT>    <FONT color=#008000>; SI = 35h + 12h = 47h </FONT>
</FONT></PRE>
                     <!-- emu8086 version 4.00-Beta-19    --><!-- STOP AUTOMATIC ASM TO HTML EXPORT -->Note: 
                     The integrated 8086 assembler automatically replaces <B>LEA</B> with a 
                     more efficient <B>MOV</B> where possible. For example: <!-- START AUTOMATIC ASM TO HTML EXPORT -->
                     <PRE><FONT face=Terminal size=3>
<FONT color=#000064>org</FONT> 100h
<FONT color=#0000ff>LEA</FONT> <FONT color=#c80000>AX</FONT>, m       <FONT color=#008000>; AX = offset of m </FONT>
<FONT color=#0000ff>RET</FONT>
m  <FONT color=#000064>dw</FONT>  1234h
<FONT color=#000064>END</FONT>
</FONT></PRE>
                     <!-- emu8086 version 4.00-Beta-19    --><!-- STOP AUTOMATIC ASM TO HTML EXPORT --><BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=LES>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>LES </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Load memory double word into word register and ES. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>REG = first word 
                           <LI>ES = second word </LI>
                        </UL>
                     </FONT>
                     <BR>Example: 
                     <PRE><FONT face=Fixedsys>

ORG 100h

LES AX, m

RET

m  DW  1234h
   DW  5678h

END
</FONT>
</PRE>
                     AX is set to 1234h, ES is set to 5678h. <BR><BR>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=LODSB>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>LODSB </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Load byte at DS:[SI] into AL. Update SI.<BR><BR>Algorithm: 
                     <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>AL = DS:[SI]<BR>
                           <LI>
                              if DF = 0 then 
                              <UL>
                                 <LI>SI = SI + 1 </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>SI = SI - 1 </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     Example: 
                     <PRE><FONT face=Fixedsys>
ORG 100h

LEA SI, a1
MOV CX, 5
MOV AH, 0Eh

m: LODSB
INT 10h
LOOP m

RET

a1 DB 'H', 'e', 'l', 'l', 'o'</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=LODSW>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>LODSW </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Load word at DS:[SI] into AX. Update SI.<BR><BR>Algorithm: 
                     <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>AX = DS:[SI]<BR>
                           <LI>
                              if DF = 0 then 
                              <UL>
                                 <LI>SI = SI + 2 </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>SI = SI - 2 </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     Example: 
                     <PRE><FONT face=Fixedsys>
ORG 100h

LEA SI, a1
MOV CX, 5

REP LODSW   ; finally there will be 555h in AX.

RET

a1 dw 111h, 222h, 333h, 444h, 555h</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=LOOP>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>LOOP </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Decrease CX, jump to label if CX not zero. <BR><BR>Algorithm: 
                     <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>CX = CX - 1<BR>
                           <LI>
                              if CX &lt;&gt; 0 then 
                              <UL>
                                 <LI>jump </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>no jump, continue </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>   include 'emu8086.inc'

   ORG 100h
   MOV CX, 5
label1:
   PRINTN 'loop!'
   LOOP label1
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=LOOPE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>LOOPE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Decrease CX, jump to label if CX not zero and Equal (ZF = 1). 
                     <BR><BR>Algorithm: <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>CX = CX - 1<BR>
                           <LI>
                              if (CX &lt;&gt; 0) and (ZF = 1) then 
                              <UL>
                                 <LI>jump </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>no jump, continue </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>; Loop until result fits into AL alone,
; or 5 times. The result will be over 255
; on third loop (100+100+100),
; so loop will exit.

   include 'emu8086.inc'

   ORG 100h
   MOV AX, 0
   MOV CX, 5
label1:
   PUTC '*'
   ADD AX, 100
   CMP AH, 0
   LOOPE label1
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=LOOPNE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>LOOPNE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Decrease CX, jump to label if CX not zero and Not Equal (ZF = 0). 
                     <BR><BR>Algorithm: <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>CX = CX - 1<BR>
                           <LI>
                              if (CX &lt;&gt; 0) and (ZF = 0) then 
                              <UL>
                                 <LI>jump </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>no jump, continue </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>; Loop until '7' is found,
; or 5 times.

   include 'emu8086.inc'

   ORG 100h
   MOV SI, 0
   MOV CX, 5
label1:
   PUTC '*'
   MOV AL, v1[SI]
   INC SI         ; next byte (SI=SI+1).
   CMP AL, 7
   LOOPNE label1
   RET
   v1 db 9, 8, 7, 6, 5</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=LOOPNZ>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>LOOPNZ </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Decrease CX, jump to label if CX not zero and ZF = 0. 
                     <BR><BR>Algorithm: <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>CX = CX - 1<BR>
                           <LI>
                              if (CX &lt;&gt; 0) and (ZF = 0) then 
                              <UL>
                                 <LI>jump </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>no jump, continue </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>; Loop until '7' is found,
; or 5 times.

   include 'emu8086.inc'

   ORG 100h
   MOV SI, 0
   MOV CX, 5
label1:
   PUTC '*'
   MOV AL, v1[SI]
   INC SI         ; next byte (SI=SI+1).
   CMP AL, 7
   LOOPNZ label1
   RET
   v1 db 9, 8, 7, 6, 5</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=LOOPZ>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>LOOPZ </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>label</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Decrease CX, jump to label if CX not zero and ZF = 1. 
                     <BR><BR>Algorithm: <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>CX = CX - 1<BR>
                           <LI>
                              if (CX &lt;&gt; 0) and (ZF = 1) then 
                              <UL>
                                 <LI>jump </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>no jump, continue </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>; Loop until result fits into AL alone,
; or 5 times. The result will be over 255
; on third loop (100+100+100),
; so loop will exit.

   include 'emu8086.inc'

   ORG 100h
   MOV AX, 0
   MOV CX, 5
label1:
   PUTC '*'
   ADD AX, 100
   CMP AH, 0
   LOOPZ label1
   RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=MOV>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>MOV </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory<BR>memory, REG<BR>REG, 
                           REG<BR>memory, immediate<BR>REG, immediate<BR><BR>SREG, memory<BR>memory, 
                           SREG<BR>REG, SREG<BR>SREG, REG 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Copy operand2 to operand1.<BR><BR>The MOV instruction <U>cannot</U>: 
                     <UL>
                        <LI>set the value of the CS and IP registers. 
                        <LI>copy value of one segment register to another segment register 
                           (should copy to general register first). 
                        <LI>copy immediate value to segment register (should copy to general 
                           register first). 
                        </LI>
                     </UL>
                     <BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <BLOCKQUOTE>operand1 = operand2 </BLOCKQUOTE>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>
ORG 100h
MOV AX, 0B800h    ; set AX = B800h (VGA memory).
MOV DS, AX        ; copy value of AX to DS.
MOV CL, 'A'       ; CL = 41h (ASCII code).
MOV CH, 01011111b ; CL = color attribute.
MOV BX, 15Eh      ; BX = position on screen.
MOV [BX], CX      ; w.[0B800h:015Eh] = CX.
RET               ; returns to operating system.
</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=MOVSB>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>MOVSB </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Copy byte at DS:[SI] to ES:[DI]. Update SI and DI.<BR><BR>Algorithm: 
                     <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>ES:[DI] = DS:[SI]<BR>
                           <LI>
                              if DF = 0 then 
                              <UL>
                                 <LI>SI = SI + 1 
                                 <LI>DI = DI + 1 </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>SI = SI - 1 
                                 <LI>DI = DI - 1 </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>
ORG 100h

CLD
LEA SI, a1
LEA DI, a2
MOV CX, 5
REP MOVSB

RET

a1 DB 1,2,3,4,5
a2 DB 5 DUP(0)</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=MOVSW>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>MOVSW </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Copy <B>word</B> at DS:[SI] to ES:[DI]. Update SI and 
                     DI.<BR><BR>Algorithm: <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>ES:[DI] = DS:[SI]<BR>
                           <LI>
                              if DF = 0 then 
                              <UL>
                                 <LI>SI = SI + 2 
                                 <LI>DI = DI + 2 </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>SI = SI - 2 
                                 <LI>DI = DI - 2 </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>
ORG 100h

CLD
LEA SI, a1
LEA DI, a2
MOV CX, 5
REP MOVSW

RET

a1 DW 1,2,3,4,5
a2 DW 5 DUP(0)</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=MUL>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>MUL </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG<BR>memory<BR></NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Unsigned multiply. <BR><BR>Algorithm:<BR><BR>
                     <BLOCKQUOTE>when operand is a <B>byte</B>:<BR><FONT face=Fixedsys>AX = 
                        AL * operand</FONT>. 
                     </BLOCKQUOTE>
                     <BLOCKQUOTE>when operand is a <B>word</B>:<BR><FONT face=Fixedsys>(DX 
                        AX) = AX * operand</FONT>. 
                     </BLOCKQUOTE>
                     Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 200   ; AL = 0C8h
MOV BL, 4
MUL BL        ; AX = 0320h (800)
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                                 <TD>r</TD>
                                 <TD>?</TD>
                                 <TD>?</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                        CF=OF=0 when high section of the result is 
                        zero. 
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=NEG>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>NEG </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG<BR>memory<BR></NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Negate. Makes operand negative (two's complement). 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>Invert all bits of the operand 
                           <LI>Add 1 to inverted operand </LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 5   ; AL = 05h
NEG AL      ; AL = 0FBh (-5)
NEG AL      ; AL = 05h (5)
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=NOP>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>NOP </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     No Operation.<BR><BR>Algorithm: <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>Do nothing<BR></LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>; do nothing, 3 times:
NOP
NOP
NOP
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=NOT>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>NOT </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG<BR>memory<BR></NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Invert each bit of the operand.<BR><BR>Algorithm: <BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>
                           <LI>if bit is 1 turn it to 0.<BR>
                           <LI>if bit is 0 turn it to 1.<BR></LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 00011011b
NOT AL   ; AL = 11100100b
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=OR>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>OR </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory<BR>memory, REG<BR>REG, 
                           REG<BR>memory, immediate<BR>REG, immediate 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Logical OR between all bits of two operands. Result is stored in first 
                     operand.<BR><BR>These rules apply:<BR><BR><FONT face=Fixedsys>1 OR 1 = 
                     1<BR>1 OR 0 = 1<BR>0 OR 1 = 1<BR>0 OR 0 = 0<BR></FONT><BR><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 'A'       ; AL = 01000001b
OR AL, 00100000b  ; AL = 01100001b  ('a')
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>0</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>0</TD>
                                 <TD>r</TD>
                                 <TD>?</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=OUT>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>OUT </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>im.byte, AL<BR>im.byte, AX<BR>DX, AL<BR>DX, 
                           AX 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Output from <B>AL</B> or <B>AX</B> to port.<BR>First operand is a port 
                     number. If required to access port number over 255 - <B>DX</B> register 
                     should be used. <BR><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AX, 0FFFh ; Turn on all
OUT 4, AX     ; traffic lights.

MOV AL, 100b  ; Turn on the third
OUT 7, AL     ; magnet of the stepper-motor.</FONT></PRE>
                     <FONT 
                        face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=POP>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>POP </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG<BR>SREG<BR>memory </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Get 16 bit value from the stack. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>
                           <LI>operand = SS:[SP] (top of the stack) 
                           <LI>SP = SP + 2 </LI>
                        </UL>
                     </FONT>
                     <BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AX, 1234h
PUSH AX
POP  DX     ; DX = 1234h
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=POPA>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>POPA </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Pop all general purpose registers DI, SI, BP, SP, BX, DX, CX, AX from 
                     the stack.<BR>SP value is ignored, it is Popped but not set to SP 
                     register).<BR><BR>Note: this instruction works only on <B>80186</B> CPU 
                     and later! <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>POP DI 
                           <LI>POP SI 
                           <LI>POP BP 
                           <LI>POP xx (SP value ignored) 
                           <LI>POP BX 
                           <LI>POP DX 
                           <LI>POP CX 
                           <LI>POP AX </LI>
                        </UL>
                     </FONT>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=POPF>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>POPF </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Get flags register from the stack. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>
                           <LI>flags = SS:[SP] (top of the stack) 
                           <LI>SP = SP + 2 </LI>
                        </UL>
                     </FONT>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>
                                    <CENTER>popped</CENTER>
                                 </TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=PUSH>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>PUSH </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG<BR>SREG<BR>memory<BR>immediate 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Store 16 bit value in the stack.<BR><BR>Note: <B>PUSH immediate</B> 
                     works only on 80186 CPU and later! <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>
                           <LI>SP = SP - 2 
                           <LI>SS:[SP] (top of the stack) = operand </LI>
                        </UL>
                     </FONT>
                     <BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AX, 1234h
PUSH AX
POP  DX     ; DX = 1234h
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=PUSHA>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>PUSHA </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Push all general purpose registers AX, CX, DX, BX, SP, BP, SI, DI in 
                     the stack.<BR>Original value of SP register (before PUSHA) is 
                     used.<BR><BR>Note: this instruction works only on <B>80186</B> CPU and 
                     later! <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>PUSH AX 
                           <LI>PUSH CX 
                           <LI>PUSH DX 
                           <LI>PUSH BX 
                           <LI>PUSH SP 
                           <LI>PUSH BP 
                           <LI>PUSH SI 
                           <LI>PUSH DI </LI>
                        </UL>
                     </FONT>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=PUSHF>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>PUSHF </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Store flags register in the stack. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>
                           <LI>SP = SP - 2 
                           <LI>SS:[SP] (top of the stack) = flags </LI>
                        </UL>
                     </FONT>
                     <FONT 
                        face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=RCL>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>RCL </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>memory, immediate</NOBR>
                        <BR>
                        <NOBR>REG, 
                           immediate
                        </NOBR>
                        <BR><BR>
                        <NOBR>memory, CL</NOBR>
                        <BR>
                        <NOBR>REG, CL</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Rotate operand1 left through Carry Flag. The number of rotates is set 
                     by operand2. <BR>When <B>immediate</B> is greater then 1, assembler 
                     generates several <B>RCL xx, 1</B> instructions because 8086 has machine 
                     code only for this instruction (the same principle works for all other 
                     shift/rotate instructions). <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>shift all bits left, the bit that goes off is set to CF and previous 
                           value of CF is inserted to the right-most position. 
                        </UL>
                     </FONT>
                     <BR>Example:
                     <PRE><FONT face=Fixedsys>STC               ; set carry (CF=1).
MOV AL, 1Ch       ; AL = 00011100b
RCL AL, 1         ; AL = 00111001b,  CF=0.
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>O</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                        OF=0 if first operand keeps original sign. 
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=RCR>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>RCR </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>memory, immediate</NOBR>
                        <BR>
                        <NOBR>REG, 
                           immediate
                        </NOBR>
                        <BR><BR>
                        <NOBR>memory, CL</NOBR>
                        <BR>
                        <NOBR>REG, CL</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Rotate operand1 right through Carry Flag. The number of rotates is set 
                     by operand2. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>shift all bits right, the bit that goes off is set to CF and 
                           previous value of CF is inserted to the left-most position. 
                        </UL>
                     </FONT>
                     <BR>Example:
                     <PRE><FONT face=Fixedsys>STC               ; set carry (CF=1).
MOV AL, 1Ch       ; AL = 00011100b
RCR AL, 1         ; AL = 10001110b,  CF=0.
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>O</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                        OF=0 if first operand keeps original sign. 
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=REP>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>REP </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>chain instruction</NOBR>
                        <BR>
                     </FONT>
                  </TD>
                  <TD>
                     Repeat following MOVSB, MOVSW, LODSB, LODSW, STOSB, STOSW instructions 
                     CX times. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        check_cx:<BR><BR>if CX &lt;&gt; 0 then 
                        <UL>
                           <LI>do following <U>chain instruction</U> 
                           <LI>CX = CX - 1 
                           <LI>go back to check_cx </LI>
                        </UL>
                        else 
                        <UL>
                           <LI>exit from REP cycle </LI>
                        </UL>
                     </FONT>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>Z</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=REPE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>REPE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>chain instruction</NOBR>
                        <BR>
                     </FONT>
                  </TD>
                  <TD>
                     Repeat following CMPSB, CMPSW, SCASB, SCASW instructions while ZF = 1 
                     (result is Equal), maximum CX times. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        check_cx:<BR><BR>if CX &lt;&gt; 0 then 
                        <UL>
                           <LI>do following <U>chain instruction</U> 
                           <LI>CX = CX - 1 
                           <LI>
                              if ZF = 1 then: 
                              <UL>
                                 <LI>go back to check_cx </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>exit from REPE cycle </LI>
                              </UL>
                           </LI>
                        </UL>
                        else 
                        <UL>
                           <LI>exit from REPE cycle </LI>
                        </UL>
                     </FONT>
                     Example:<BR>see <B>cmpsb.asm</B> 
                     in c:\emu8086\examples\. <BR><BR>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>Z</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=REPNE>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>REPNE </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>chain instruction</NOBR>
                        <BR>
                     </FONT>
                  </TD>
                  <TD>
                     Repeat following CMPSB, CMPSW, SCASB, SCASW instructions while ZF = 0 
                     (result is Not Equal), maximum CX times. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        check_cx:<BR><BR>if CX &lt;&gt; 0 then 
                        <UL>
                           <LI>do following <U>chain instruction</U> 
                           <LI>CX = CX - 1 
                           <LI>
                              if ZF = 0 then: 
                              <UL>
                                 <LI>go back to check_cx </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>exit from REPNE cycle </LI>
                              </UL>
                           </LI>
                        </UL>
                        else 
                        <UL>
                           <LI>exit from REPNE cycle </LI>
                        </UL>
                     </FONT>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>Z</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=REPNZ>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>REPNZ </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>chain instruction</NOBR>
                        <BR>
                     </FONT>
                  </TD>
                  <TD>
                     Repeat following CMPSB, CMPSW, SCASB, SCASW instructions while ZF = 0 
                     (result is Not Zero), maximum CX times. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        check_cx:<BR><BR>if CX &lt;&gt; 0 then 
                        <UL>
                           <LI>do following <U>chain instruction</U> 
                           <LI>CX = CX - 1 
                           <LI>
                              if ZF = 0 then: 
                              <UL>
                                 <LI>go back to check_cx </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>exit from REPNZ cycle </LI>
                              </UL>
                           </LI>
                        </UL>
                        else 
                        <UL>
                           <LI>exit from REPNZ cycle </LI>
                        </UL>
                     </FONT>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>Z</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=REPZ>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>REPZ </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>chain instruction</NOBR>
                        <BR>
                     </FONT>
                  </TD>
                  <TD>
                     Repeat following CMPSB, CMPSW, SCASB, SCASW instructions while ZF = 1 
                     (result is Zero), maximum CX times. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        check_cx:<BR><BR>if CX &lt;&gt; 0 then 
                        <UL>
                           <LI>do following <U>chain instruction</U> 
                           <LI>CX = CX - 1 
                           <LI>
                              if ZF = 1 then: 
                              <UL>
                                 <LI>go back to check_cx </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>exit from REPZ cycle </LI>
                              </UL>
                           </LI>
                        </UL>
                        else 
                        <UL>
                           <LI>exit from REPZ cycle </LI>
                        </UL>
                     </FONT>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>Z</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=RET>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>RET </FONT></TD>
                  <TD>No operands<BR>or even immediate</TD>
                  <TD>
                     Return from near procedure. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>
                           <LI>
                              Pop from stack: 
                              <UL>
                                 <LI>IP </LI>
                              </UL>
                           <LI>
                              if <U>immediate</U> operand is present: 
                              <NOBR>SP = SP + 
                                 operand
                              </NOBR>
                           </LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>
ORG 100h  ; for COM file.

CALL p1

ADD AX, 1

RET         ; return to OS.

p1 PROC     ; procedure declaration.
    MOV AX, 1234h
    RET     ; return to caller.
p1 ENDP</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=RETF>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>RETF </FONT></TD>
                  <TD>No operands<BR>or even immediate</TD>
                  <TD>
                     Return from Far procedure. <BR><BR>Algorithm:<BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <UL>
                           <LI>
                              Pop from stack: 
                              <UL>
                                 <LI>IP 
                                 <LI>CS </LI>
                              </UL>
                           <LI>
                              if <U>immediate</U> operand is present: 
                              <NOBR>SP = SP + 
                                 operand
                              </NOBR>
                           </LI>
                        </UL>
                     </FONT>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=ROL>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>ROL </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>memory, immediate</NOBR>
                        <BR>
                        <NOBR>REG, 
                           immediate
                        </NOBR>
                        <BR><BR>
                        <NOBR>memory, CL</NOBR>
                        <BR>
                        <NOBR>REG, CL</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Rotate operand1 left. The number of rotates is set by operand2. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>shift all bits left, the bit that goes off is set to CF and the same 
                           bit is inserted to the right-most position. 
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 1Ch       ; AL = 00011100b
ROL AL, 1         ; AL = 00111000b,  CF=0.
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>O</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                        OF=0 if first operand keeps original sign. 
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=ROR>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>ROR </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>memory, immediate</NOBR>
                        <BR>
                        <NOBR>REG, 
                           immediate
                        </NOBR>
                        <BR><BR>
                        <NOBR>memory, CL</NOBR>
                        <BR>
                        <NOBR>REG, CL</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Rotate operand1 right. The number of rotates is set by operand2. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>shift all bits right, the bit that goes off is set to CF and the 
                           same bit is inserted to the left-most position. 
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 1Ch       ; AL = 00011100b
ROR AL, 1         ; AL = 00001110b,  CF=0.
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>O</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                        OF=0 if first operand keeps original sign. 
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=SAHF>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>SAHF </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Store AH register into low 8 bits of Flags register. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>flags register = AH<BR></UL>
                        <PRE><FONT face=Fixedsys>
AH bit:   7    6   5    4   3    2   1    0
        [SF] [ZF] [0] [AF] [0] [PF] [1] [CF]</FONT>
</PRE>
                        bits 1, 3, 5 are reserved. 
                     </FONT>
                     <BR><BR>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=SAL>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>SAL </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>memory, immediate</NOBR>
                        <BR>
                        <NOBR>REG, 
                           immediate
                        </NOBR>
                        <BR><BR>
                        <NOBR>memory, CL</NOBR>
                        <BR>
                        <NOBR>REG, CL</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Shift Arithmetic operand1 Left. The number of shifts is set by 
                     operand2. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>Shift all bits left, the bit that goes off is set to CF. 
                           <LI>Zero bit is inserted to the right-most position. 
                           </LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 0E0h      ; AL = 11100000b
SAL AL, 1         ; AL = 11000000b,  CF=1.
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>O</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                        OF=0 if first operand keeps original sign. 
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=SAR>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>SAR </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>memory, immediate</NOBR>
                        <BR>
                        <NOBR>REG, 
                           immediate
                        </NOBR>
                        <BR><BR>
                        <NOBR>memory, CL</NOBR>
                        <BR>
                        <NOBR>REG, CL</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Shift Arithmetic operand1 Right. The number of shifts is set by 
                     operand2. <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>Shift all bits right, the bit that goes off is set to CF. 
                           <LI>The sign bit that is inserted to the left-most position has the same 
                              value as before shift. 
                           </LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 0E0h      ; AL = 11100000b
SAR AL, 1         ; AL = 11110000b,  CF=0.

MOV BL, 4Ch       ; BL = 01001100b
SAR BL, 1         ; BL = 00100110b,  CF=0.

RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>O</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                        OF=0 if first operand keeps original sign. 
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=SBB>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>SBB </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory<BR>memory, REG<BR>REG, 
                           REG<BR>memory, immediate<BR>REG, immediate 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Subtract with Borrow. <BR><BR>Algorithm:<BR><BR><FONT 
                        face=Fixedsys>operand1 = operand1 - operand2 - CF </FONT><BR><BR>Example:
                     <PRE><FONT face=Fixedsys>STC
MOV AL, 5
SBB AL, 3    ; AL = 5 - 3 - 1 = 1

RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=SCASB>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>SCASB </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Compare bytes: 
                     <NOBR>AL from ES:[DI].</NOBR>
                     <BR><BR>Algorithm: 
                     <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>ES:[DI] - AL<BR>
                           <LI>set flags according to result:<BR>OF, SF, ZF, AF, PF, CF<BR>
                           <LI>
                              if DF = 0 then 
                              <UL>
                                 <LI>DI = DI + 1 </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>DI = DI - 1 </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=SCASW>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>SCASW </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Compare words: 
                     <NOBR>AX from ES:[DI].</NOBR>
                     <BR><BR>Algorithm: 
                     <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>ES:[DI] - AX<BR>
                           <LI>set flags according to result:<BR>OF, SF, ZF, AF, PF, CF<BR>
                           <LI>
                              if DF = 0 then 
                              <UL>
                                 <LI>DI = DI + 2 </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>DI = DI - 2 </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=SHL>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>SHL </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>memory, immediate</NOBR>
                        <BR>
                        <NOBR>REG, 
                           immediate
                        </NOBR>
                        <BR><BR>
                        <NOBR>memory, CL</NOBR>
                        <BR>
                        <NOBR>REG, CL</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Shift operand1 Left. The number of shifts is set by operand2. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>Shift all bits left, the bit that goes off is set to CF. 
                           <LI>Zero bit is inserted to the right-most position. 
                           </LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 11100000b
SHL AL, 1         ; AL = 11000000b,  CF=1.

RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>O</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                        OF=0 if first operand keeps original sign. 
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=SHR>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>SHR </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>memory, immediate</NOBR>
                        <BR>
                        <NOBR>REG, 
                           immediate
                        </NOBR>
                        <BR><BR>
                        <NOBR>memory, CL</NOBR>
                        <BR>
                        <NOBR>REG, CL</NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Shift operand1 Right. The number of shifts is set by operand2. 
                     <BR><BR>Algorithm:<BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>Shift all bits right, the bit that goes off is set to CF. 
                           <LI>Zero bit is inserted to the left-most position. 
                           </LI>
                        </UL>
                     </FONT>
                     Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 00000111b
SHR AL, 1         ; AL = 00000011b,  CF=1.

RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>O</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                        OF=0 if first operand keeps original sign. 
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=STC>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>STC </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Set Carry flag. <BR><BR>Algorithm: <BR><BR><FONT face=Fixedsys>CF = 1 
                     </FONT><BR><BR>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                              </TR>
                              <TR>
                                 <TD>1</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=STD>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>STD </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Set Direction flag. SI and DI will be decremented by chain 
                     instructions: CMPSB, CMPSW, LODSB, LODSW, MOVSB, MOVSW, STOSB, STOSW. 
                     <BR><BR>Algorithm: <BR><BR><FONT face=Fixedsys>DF = 1 </FONT><BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>D</TD>
                              </TR>
                              <TR>
                                 <TD>1</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=STI>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>STI </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Set Interrupt enable flag. This enables hardware interrupts. 
                     <BR><BR>Algorithm: <BR><BR><FONT face=Fixedsys>IF = 1 </FONT><BR><BR>
                     <FONT 
                        face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>I</TD>
                              </TR>
                              <TR>
                                 <TD>1</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=STOSB>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>STOSB </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Store byte in AL into ES:[DI]. Update DI.<BR><BR>Algorithm: 
                     <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>ES:[DI] = AL<BR>
                           <LI>
                              if DF = 0 then 
                              <UL>
                                 <LI>DI = DI + 1 </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>DI = DI - 1 </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     Example: 
                     <PRE><FONT face=Fixedsys>
ORG 100h

LEA DI, a1
MOV AL, 12h
MOV CX, 5

REP STOSB

RET

a1 DB 5 dup(0)</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=STOSW>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>STOSW </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Store word in AX into ES:[DI]. Update DI.<BR><BR>Algorithm: 
                     <BR><BR>
                     <FONT face=Fixedsys>
                        <UL>
                           <LI>ES:[DI] = AX<BR>
                           <LI>
                              if DF = 0 then 
                              <UL>
                                 <LI>DI = DI + 2 </LI>
                              </UL>
                              else 
                              <UL>
                                 <LI>DI = DI - 2 </LI>
                              </UL>
                           </LI>
                        </UL>
                     </FONT>
                     Example: 
                     <PRE><FONT face=Fixedsys>
ORG 100h

LEA DI, a1
MOV AX, 1234h
MOV CX, 5

REP STOSW

RET

a1 DW 5 dup(0)</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=SUB>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>SUB </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory<BR>memory, REG<BR>REG, 
                           REG<BR>memory, immediate<BR>REG, immediate 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Subtract. <BR><BR>Algorithm:<BR><BR><FONT face=Fixedsys>operand1 = 
                     operand1 - operand2 </FONT><BR><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 5
SUB AL, 1         ; AL = 4

RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=TEST>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>TEST </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory<BR>memory, REG<BR>REG, 
                           REG<BR>memory, immediate<BR>REG, immediate 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Logical AND between all bits of two operands for flags only. These 
                     flags are effected: <B>ZF, SF, PF.</B> Result is not stored 
                     anywhere.<BR><BR>These rules apply:<BR><BR><FONT face=Fixedsys>1 AND 1 = 
                     1<BR>1 AND 0 = 0<BR>0 AND 1 = 0<BR>0 AND 0 = 0<BR></FONT><BR><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 00000101b
TEST AL, 1         ; ZF = 0.
TEST AL, 10b       ; ZF = 1.
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                              </TR>
                              <TR>
                                 <TD>0</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>0</TD>
                                 <TD>r</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=XCHG>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>XCHG </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory<BR>memory, REG<BR>REG, REG 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Exchange values of two operands. <BR><BR>Algorithm:<BR><BR><FONT 
                        face=Fixedsys>operand1 &lt; - &gt; operand2 </FONT><BR><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 5
MOV AH, 2
XCHG AL, AH   ; AL = 2, AH = 5
XCHG AL, AH   ; AL = 5, AH = 2
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=XLATB>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>XLATB </FONT></TD>
                  <TD>No operands</TD>
                  <TD>
                     Translate byte from table.<BR>Copy value of memory byte at 
                     <NOBR>DS:[BX + unsigned AL]</NOBR>
                     to AL register. 
                     <BR><BR>Algorithm:<BR><BR><FONT face=Fixedsys>AL = DS:[BX + unsigned AL] 
                     </FONT><BR><BR>Example:
                     <PRE><FONT face=Fixedsys>
ORG 100h
LEA BX, dat
MOV AL, 2
XLATB     ; AL = 33h

RET

dat DB 11h, 22h, 33h, 44h, 55h</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD colSpan=6>unchanged</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> <A name=XOR>&nbsp;</A> 
                  </TD>
               </TR>
               <TR>
                  <TD><FONT face=Fixedsys>XOR </FONT></TD>
                  <TD>
                     <FONT face=Fixedsys>
                        <NOBR>REG, memory<BR>memory, REG<BR>REG, 
                           REG<BR>memory, immediate<BR>REG, immediate 
                        </NOBR>
                     </FONT>
                  </TD>
                  <TD>
                     Logical XOR (Exclusive OR) between all bits of two operands. Result is 
                     stored in first operand.<BR><BR>These rules apply:<BR><BR><FONT 
                        face=Fixedsys>1 XOR 1 = 0<BR>1 XOR 0 = 1<BR>0 XOR 1 = 1<BR>0 XOR 0 = 
                     0<BR></FONT><BR><BR>Example:
                     <PRE><FONT face=Fixedsys>MOV AL, 00000111b
XOR AL, 00000010b    ; AL = 00000101b
RET</FONT></PRE>
                     <FONT face=Fixedsys>
                        <TABLE border=1 NOSHADE>
                           <TBODY>
                              <TR>
                                 <TD>C</TD>
                                 <TD>Z</TD>
                                 <TD>S</TD>
                                 <TD>O</TD>
                                 <TD>P</TD>
                                 <TD>A</TD>
                              </TR>
                              <TR>
                                 <TD>0</TD>
                                 <TD>r</TD>
                                 <TD>r</TD>
                                 <TD>0</TD>
                                 <TD>r</TD>
                                 <TD>?</TD>
                              </TR>
                           </TBODY>
                        </TABLE>
                     </FONT>
                     <A href="#top1"><P ALIGN="RIGHT"><FONT FACE="Verdana" SIZE=3><B>Back to top</B></A></FONT></P> 
                  </TD>
               </TR>
            </TBODY>
         </TABLE>
         <BR><BR>
         <HR>
         <BR><BR><BR>
         <CENTER><FONT size=2>copyright ©<FONT size=1>2005</FONT> <A 
            href="http://www.emu8086.com/">emu8086.com</A><BR>all rights 
            reserved.<BR></FONT>
         </CENTER>
      </FONT>
      <BR>
   </BODY>
</HTML>
